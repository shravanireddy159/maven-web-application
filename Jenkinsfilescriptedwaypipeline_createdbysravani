def sendSlackNotifications(String buildStatus = 'STARTED') {
  // build status of null means success
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESS') {
    color = 'GREEN'
    colorCode = '#00FF00'
  } else {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}

node{
    echo "job name is = ${env.JOB_NAME}"
    echo "node name is = ${env.NODE_NAME}"
    
    def mavenHome = tool name:'maven3.8.7'
    try{

     sendSlackNotifications('STARTED')
    // Gt the code from Github 
    stage('CheckoutCode'){
        git branch: 'development', credentialsId: '74d4ee94-b792-428c-8fe2-cf7ce2e84c2e', url: 'https://github.com/shravanireddy159/maven-web-application.git'
    }
    // Do the build using maven buildtool
    stage('Build'){
        sh "${mavenHome}/bin/mvn clean package"
    }
    // Execute SonarQube Report
    stage('ExecuteSonarQubeReport'){
        sh "${mavenHome}/bin/mvn sonar:sonar"
    }
    // Upload Artifacts into Artifactory Repo
     stage('UploadArtifactsintoNexus'){
        sh "${mavenHome}/bin/mvn deploy"
    }
    /*
    //Deploy Application into Tomcat Server
    stage('DeployApplicationIntoTomcatServer'){
        sshagent(['46794642-f89b-4e2a-9147-aa483dce83d0']) {
            sh "scp -o StrictHostKeyChecking=no /target/maven-web-application.war ec2-user@43.205.240.235:/opt/apache-tomcat-9.0.70/webapps/"
    
}
}
*/
}//Try CLosing
  catch(e){
  currentBuild.result = "FAILED"
  }
  finally{

sendSlackNotifications(currentBuild.result)
}
}//Node Closing
